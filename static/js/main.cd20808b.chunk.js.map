{"version":3,"sources":["utils/API.js","components/table/Table.js","components/loader/Loader.js","components/search/Search.js","components/header/Header.js","components/footer/Footer.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["config","headers","axios","get","Table","props","search","searchResults","length","className","Object","keys","employees","map","employee","index","key","alt","src","picture","large","name","first","last","location","city","state","email","phone","console","log","resultIndex","Loader","role","Search","aria-label","value","onChange","handleInputChange","type","placeholder","list","Header","Footer","firstNameValue","lastNameValue","phoneNumberValue","firstNameRender","lastNameRender","phoneNumberRender","onClick","handleFirstNameClick","handleLastNameClick","handlePhoneNumberClick","Main","event","setState","target","setTimeout","filter","includes","results","isLoading","bind","this","API","then","res","data","catch","err","sort","a","b","localeCompare","firstNameSort","lastNameSort","phoneNumberSort","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cd20808b.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Setting up CORS access configuration\nconst config = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n    }\n};\n\nexport default {\n  getEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=20\", config)\n  }\n};","import React from \"react\";\nimport \"./style.css\";\n\nfunction Table(props) {\n    // If there is something in the search field and nothing returns in the search results, display text\n    if (props.search && props.searchResults.length === 0) {\n        return (\n            <p className=\"voidSearch\">No employees exist with this search criteria. Please try something else.</p>\n        )\n    }\n    // If nothing entered in the search bar, map everything in the employees prop\n    else if (props.searchResults.length === 0) {\n        return (\n            <ul className=\"list-group\">\n              {Object.keys(props.employees).map((employee, index) => (\n                <li key={employee} className=\"list-group-item align-center\">\n                  <img alt=\"Employee\" src={props.employees[employee].picture.large} className=\"img-fluid float-left\" />\n                  <p className=\"float-left split\"> {props.employees[employee].name.first + ' ' + props.employees[employee].name.last} </p>\n                  <p className=\"float-left\"> {props.employees[employee].location.city + ', ' + props.employees[employee].location.state} </p>\n                  <p className=\"float-right split\"> {props.employees[employee].email} </p>\n                  <p className=\"float-right split\"> {props.employees[employee].phone} </p>\n                </li>\n              ))}\n            </ul>\n        );\n    }\n    // If something is in the search bar, map the filtered indexes and display from the employees prop\n    else if (props.searchResults) {\n        console.log(props.searchResults)\n        return (\n            <ul className=\"list-group\">\n              {props.searchResults.map((resultIndex, index) => (\n                <li key={resultIndex} className=\"list-group-item align-center\">\n                  <img alt=\"Employee\" src={props.employees[resultIndex].picture.large} className=\"img-fluid float-left\" />\n                  <p className=\"float-left split\"> {props.employees[resultIndex].name.first + ' ' + props.employees[resultIndex].name.last} </p>\n                  <p className=\"float-left\"> {props.employees[resultIndex].location.city + ', ' + props.employees[resultIndex].location.state} </p> \n                  <p className=\"float-right split\"> {props.employees[resultIndex].email} </p>\n                  <p className=\"float-right split\"> {props.employees[resultIndex].phone} </p>\n                </li>\n              ))}\n            </ul>\n        );\n    }\n}\n\nexport default Table;\n\n","import React from \"react\";\n\nfunction Loader() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Loader;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Search(props) {\n    if (props) {\n        return (\n            <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                        <span role='img' aria-label='search icon' className=\"input-group-text\">&#x1F50E;</span>\n                </div>\n    \n                <input \n                value={props.search}\n                onChange={props.handleInputChange} \n                type=\"text\" \n                aria-label=\"Search\" \n                className=\"form-control\"\n                name=\"search\"\n                placeholder=\"Start typing to filter results\"\n                list=\"results\" />\n    \n                <div className=\"input-group-append\">\n                        <span role='img' aria-label='search icon' className=\"input-group-text\">&#x1F50D;</span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <h5 className=\"card-title\">Manpower</h5>\n            <p className=\"card-text motto\">Track your manpower!</p>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n    // Set button text to respond to props values\n    let firstNameValue, lastNameValue, phoneNumberValue = \"\";\n\n    switch(props.firstNameRender) {\n        case true:\n          firstNameValue = \"First Name: Z-A\"\n          break;\n        case false:\n          firstNameValue = \"First Name: A-Z\"\n          break;\n        default:\n          firstNameValue = \"Trouble Connecting\"\n    }\n\n    switch(props.lastNameRender) {\n        case true:\n          lastNameValue = \"Last Name: Z-A\"\n          break;\n        case false:\n          lastNameValue = \"Last Name: A-Z\"\n          break;\n        default:\n          lastNameValue = \"Trouble Connecting\"\n    }\n\n    switch(props.phoneNumberRender) {\n        case true:\n          phoneNumberValue = \"Phone Number: 9-0\"\n          break;\n        case false:\n          phoneNumberValue = \"Phone Number: 0-9\"\n          break;\n        default:\n          phoneNumberValue = \"Trouble Connecting\"\n    }\n\n    return (\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n            <button onClick={() => props.handleFirstNameClick()} type=\"button\" className=\"btn btn-primary\">{firstNameValue}</button>\n            <button onClick={() => props.handleLastNameClick()} type=\"button\" className=\"btn btn-light\">{lastNameValue}</button>\n            <button onClick={() => props.handlePhoneNumberClick()} type=\"button\" className=\"btn btn-primary\">{phoneNumberValue}</button>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Table from '../components/table/Table';\nimport Loader from '../components/loader/Loader';\nimport Search from '../components/search/Search';\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer'\nimport \"./style.css\";\n\nclass Main extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            search: \"\",\n            employees: {},\n            results: [],\n            isLoading: true,\n            firstNameRender: false,\n            lastNameRender: false,\n            phoneNumberRender: false\n          };\n\n          this.handleFirstNameClick = this.handleFirstNameClick.bind(this);\n          this.handleLastNameClick = this.handleLastNameClick.bind(this);\n          this.handlePhoneNumberClick = this.handlePhoneNumberClick.bind(this);\n    }\n\n\n    // When the component mounts, set state.employees to all employees\n    componentDidMount() {\n            this.setState({ isLoading: false });\n            API.getEmployees()\n                .then(res => {\n                    this.setState({ employees: res.data.results })\n                })\n                .catch(err => console.log(err));\n    }\n\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n        // Filters search and returns the array indexes of matching results\n        setTimeout(() => {\n            let searchResults = Object.keys(this.state.employees).filter((employee) => { \n                return this.state.employees[employee].name.first.includes(this.state.search) === true || this.state.employees[employee].name.last.includes(this.state.search) === true || this.state.employees[employee].email.includes(this.state.search) === true || this.state.employees[employee].phone.includes(this.state.search) === true\n            })\n            this.setState({ results: searchResults})\n        }, 100)\n    };\n\n    handleFirstNameClick() {\n        // if this.state.firstNameRender is true, set to false and sort first name z-a\n        if (this.state.firstNameRender) {\n            this.setState({ \n                firstNameRender: false, \n                lastNameRender: false, \n                phoneNumberRender: false  \n            })\n            this.state.employees.sort(function(a, b){\n                return b.name.first.localeCompare(a.name.first);\n            })\n        }\n        // if this.state.firstNameRender is false, set to true and sort by first name a-z\n        else if (!this.state.firstNameRender) {\n            this.setState({ \n                firstNameRender: true, \n                lastNameRender: false, \n                phoneNumberRender: false \n            })\n            this.state.employees.sort(function(a, b){\n                return a.name.first.localeCompare(b.name.first);\n            })\n        }\n    }\n\n    handleLastNameClick() {\n        // if this.state.lastNameRender is true, set lastNameRender to false and sort z-a\n        if (this.state.lastNameRender) {\n            this.setState({ \n                firstNameRender: false, \n                lastNameRender: false, \n                phoneNumberRender: false  \n            }) \n            this.state.employees.sort(function(a, b){\n                return b.name.last.localeCompare(a.name.last);\n            })\n        }\n        // if this.state.lastNameRender is false, set lastNameRender to true and sort a-z\n        else if (!this.state.lastNameRender) {\n            this.setState({ \n                firstNameRender: false, \n                lastNameRender: true, \n                phoneNumberRender: false \n            })\n            this.state.employees.sort(function(a, b){\n                return a.name.last.localeCompare(b.name.last);\n            })\n        }\n    }\n\n    handlePhoneNumberClick() {\n        // if this.state.phoneNumberRender is true, set to false and sort phone numbers 9-0\n        if (this.state.phoneNumberRender) {\n            this.setState({ \n                firstNameRender: false, \n                lastNameRender: false, \n                phoneNumberRender: false  \n            }) \n            this.state.employees.sort(function(a, b){\n                return b.phone.localeCompare(a.phone);\n            })\n        }\n        // if this.state.phoneNumberRender is false, set to true and sort phone numbers 0-9\n        else if (!this.state.phoneNumberRender) {\n            this.setState({ \n                firstNameRender: false, \n                lastNameRender: false, \n                phoneNumberRender: true \n            })\n            this.state.employees.sort(function(a, b){\n                return a.phone.localeCompare(b.phone);\n            })\n        }\n    }\n\n  render() {\n    return (\n        <div className=\"card\">\n            {/* Set loader if page not loaded, else render content */}\n            {this.state.isLoading ? \n                (<Loader />) : \n                (<div className=\"container\">\n                    <div className=\"card-body\">\n                        <Header />\n                        <Search\n                            handleInputChange={this.handleInputChange}\n                            results={this.state.search}\n                        />\n                        <Table \n                            employees={this.state.employees}\n                            searchResults={this.state.results}\n                            search={this.state.search}\n                            firstNameSort={this.state.firstNameRender}\n                            lastNameSort={this.state.lastNameRender}\n                            phoneNumberSort={this.state.phoneNumberRender}\n                        />\n                    </div>\n                    <Footer\n                        handleFirstNameClick={this.handleFirstNameClick}\n                        handleLastNameClick={this.handleLastNameClick}\n                        handlePhoneNumberClick={this.handlePhoneNumberClick}\n                        firstNameRender={this.state.firstNameRender}\n                        lastNameRender={this.state.lastNameRender}\n                        phoneNumberRender={this.state.phoneNumberRender}\n                    />\n                </div>) \n            }\n        </div>\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\nimport Main from './pages/Main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}